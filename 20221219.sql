/*
무결성 제약 조건

 무결성 : 데이터베이스 내에 데이터의 확장성을 유지하는것을 의미한다.
         바람직하지 않은 데이터가 저장되는 것을 방지하는 것을 말한다.
         
 NOT NULL   : NULL값을 허용하지 않는다.
 UNIQUE     : 중복된 값을 허용하지 않는다.
 PRIMARY KEY : NOT NULL + UNIQUE
 FOREIGN KEY : 참조되는 테이블의 컬럼이 값이 존재하면 허용함
 CHECK       : 저장 가능한 데이터값의 범위나 조건을 지정하여 설정한 값만을 허용한다.
 */
 
 SELECT * FROM TAB;
 
 DROP TABLE EMP04;
 
 PURGE RECYCLEBIN;
 
 
 CREATE TABLE EMP01 (
 EMPNO NUMBER(4),
 ENAME VARCHAR2(10),
 JOB VARCHAR2(9),
 DEPTNO NUMBER(4)
 );
 
 INSERT INTO EMP01 VALUES (NULL,NULL,'SALESMAN',30);
 SELECT * FROM EMP01;
 
 -- 사원번호,사원명,직급,부서번호로 구성하되, 사원번호와 사원명에 NOT NULL조건을 지정
 
 CREATE TABLE EMP02 (
 EMPNO NUMBER(4) not NULL,
 ENAME VARCHAR2(10)not NULL,
 JOB VARCHAR2(9),
 DEPTNO NUMBER(4)
 );
INSERT INTO EMP02 VALUES (NULL,NULL,'SALESMAN',30);
INSERT INTO EMP02 VALUES (7499,'ALLEN','SALESMAN',20);
INSERT INTO EMP02 VALUES (7499,'STUDENT','MANAGER',20);

SELECT * from emp02;

CREATE TABLE EMP03 (
 EMPNO NUMBER(4) UNIQUE,
 ENAME VARCHAR2(10)not NULL,
 JOB VARCHAR2(9),
 DEPTNO NUMBER(4)
 );
 
INSERT INTO EMP03 VALUES (7499,'ALLEN','SALESMAN',30);
INSERT INTO EMP03 VALUES (7499,'STUDENT','MANAGER',20);
INSERT INTO EMP03 VALUES (NULL,'JONES','MANAGER',20);

CREATE TABLE emp04 (
 EMPNO NUMBER(4) PRIMARY KEY,
 ENAME VARCHAR2(10)not NULL,
 JOB VARCHAR2(9),
 DEPTNO NUMBER(4)
 );
 
 INSERT INTO emp04 VALUES (7499,'ALLEN','SALESMAN',30);
INSERT INTO emp04 VALUES (7499,'STUDENT','MANAGER',20);
INSERT INTO emp04 VALUES (NULL,'JONES','MANAGER',20);

SELECT * from emp04;
SELECT  CONSTRAINT_NAME,CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINT WHERE TABLE_NAME ='EMP04';
--        제약 조건명       제약조건유형         제약조건이 속한 테이블명
/*

    CONSTRAINT_TYPE
    P      :  PRIMARY KEY
    R      :  FOREIGN KEY
    U      :  UNIQUE
    C      :  CHECK NOT NULL - NOT NULL을 CHECK
*/

SELECT * FROM user_cons_columns WHERE TABLE_NAME='EMP04'; 
SELECT * FROM EMP04;

/*
 참조 무결성을 위한 FROEIGN KEY 제약 조건
 참조 무결성은 두 테이블 상이의 추종 관계에서 설정된다.

 먼저 존재해야하는 테이블 (주 : 부모테이블)
 이를 참조하는 테이블을 (종 : 자식테이블)

 부서    -     < 소속 >     -      사원

*/

SELECT  CONSTRAINT_NAME,CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINT WHERE TABLE_NAME ='DEPT';
DESC DEPT;
SELECT * FROM user_cons_columns WHERE TABLE_NAME='DEPT'; 

CREATE TABLE DEPT01 (
DEPTNO NUMBER(2) PRIMARY KEY,
DNAME VARCHAR2(14),
LOC VARCHAR2(13)
);
SELECT * FROM user_cons_columns WHERE TABLE_NAME='DEPT01'; 
SELECT * FROM DEPT;
INSERT INTO DEPT01 VALUES(10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT01 VALUES(20,'RESEARCH','DALLAS');
INSERT INTO DEPT01 VALUES(30,'SALES','CHICAGO');
INSERT INTO DEPT01 VALUES(40,'OPERATIONS','BOSTON');

CREATE TABLE emp05 (
 EMPNO NUMBER(4) PRIMARY KEY,
 ENAME VARCHAR2(10)not NULL,
 JOB VARCHAR2(9),
 DEPTNO NUMBER(4) REFERENCES DEPT01(DEPTNO)
 );
 DROP TABLE DEPT01;
 
select * from emp05;
INSERT INTO emp05 VALUES (7499,'ALLEN','SALESMAN',30);
-- 외래 KEY
INSERT INTO emp05 VALUES (7566,'JONES','MANAGER',50);
SELECT * FROM DEPT01;
SELECT  CONSTRAINT_NAME,CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINT WHERE TABLE_NAME ='EMP05';
SELECT * FROM user_cons_columns WHERE TABLE_NAME='EMP05';

/*
 CHECK 제약 조건
 입력된 값을 체크하여 설정 된 값 이외의 값이 들어오면 오류메시지와 함께 명령이 수행되지 못하게 하는 것을 의미한다.
*/
-- EMP06 사원 테이블에 GENDER(성별) 컬럼을 추가하되 GENDER컬럼에는 
-- 'M','F'의 두값만 저장할수 GHECK 제약 조건 설정

CREATE TABLE EMP06(
EMPNO NUMBER(4) PRIMARY KEY,
ENAME VARCHAR2(10) NOT NULL,
GENDER VARCHAR2 (1) CHECK(GENDER IN('M','F'))
);
INSERT INTO emp06 VALUES (7566,'JONES','M');
SELECT  CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM user_constraints WHERE TABLE_NAME ='EMP06';
SELECT * FROM user_cons_columns WHERE TABLE_NAME='EMP06';

/*
제약 조건명  지정하기
 사용자가 의미 있게 제약 조건명을 명시하여 제약 조건명만으로도 어떤 제약조건을 위해 했는지
 알수 있게 지정하는 방법이다.
 
 제약 조건 명시법
 컬럼명, 데이터, 타입, 제약조건, 제약조건이름, 제약조건타입
 
 제약 조건명 규칙
 테이블명_컬럼명_제약조건유형
 
 EMP06_EMPNO_PK
 테이블명 컬럼명 제약조건유형
*/
DROP TABLE EMP07;
CREATE TABLE emp07 (
 EMPNO NUMBER(4), 
 ENAME VARCHAR2(10),
 JOB VARCHAR2(9),
 DEPTNO NUMBER(2),
 PRIMARY KEY(DEPTNO),
 UNIQUE (JOB),
/*
 CONSTRAINT EMP07_EMPNO_PK PRIMARY KEY,
 CONSTRAINT EMP07_EMPNO_NN NOT NULL
 CONSTRAINT EMP07_JOB_UK UNIQUE,
 CONSTRAINT EMP07_DEPTNO_FK FOREIGN KEY(DEPTNO) not REFERENCES DEPT01(DEPTNO)
*/
 INSERT INTO EMP07 VALUES(7499,'ALLEN','SALASMAN',30);
 INSERT INTO EMP07 VALUES(7450,'ALLEN','MANAGER',50);
 EMP07_DEPTNO REFERENCES
 
 SELECT  CONSTRAINT_NAME,CONSTRAINT_TYPE, TABLE_NAME,R_CONSTRAINT NAME
 FROM USER_CONSTRAINTS WHERE TABLE_NAME ='EMP07';

SELECT * FROM user_cons_columns WHERE TABLE_NAME ='EMP07';
 INSERT INTO EMP07 VALUES(7499,'ALLEN','SALASMAN',30);
 INSERT INTO EMP07 VALUES(7499,'NULL','SALASMAN',30);

 SELECT * FROM USER_CONS_SOLUMNS WHERE 
 
 SELECT * FROM EMP01;
 DELETE FROM EMP01;